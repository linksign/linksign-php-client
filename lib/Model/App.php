<?php
/**
 * App
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * App Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class App implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'email_template_id' => 'string',
        'redirect_uri' => 'string',
        'seal_html5_template_id' => 'string',
        'signature_html5_template_id' => 'string',
        'sms_template_id' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'email_template_id' => 'emailTemplateId',
        'redirect_uri' => 'redirectUri',
        'seal_html5_template_id' => 'sealHtml5TemplateId',
        'signature_html5_template_id' => 'signatureHtml5TemplateId',
        'sms_template_id' => 'smsTemplateId'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'email_template_id' => 'setEmailTemplateId',
        'redirect_uri' => 'setRedirectUri',
        'seal_html5_template_id' => 'setSealHtml5TemplateId',
        'signature_html5_template_id' => 'setSignatureHtml5TemplateId',
        'sms_template_id' => 'setSmsTemplateId'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'email_template_id' => 'getEmailTemplateId',
        'redirect_uri' => 'getRedirectUri',
        'seal_html5_template_id' => 'getSealHtml5TemplateId',
        'signature_html5_template_id' => 'getSignatureHtml5TemplateId',
        'sms_template_id' => 'getSmsTemplateId'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $email_template_id \u90AE\u4EF6\u6A21\u677F\u7F16\u53F7
      * @var string
      */
    protected $email_template_id;
    
    /**
      * $redirect_uri Signature completed redirected link
      * @var string
      */
    protected $redirect_uri;
    
    /**
      * $seal_html5_template_id \u5370\u7AE0\u91C7\u96C6H5\u9875\u9762\u6A21\u677F\u7F16\u53F7
      * @var string
      */
    protected $seal_html5_template_id;
    
    /**
      * $signature_html5_template_id \u7B7E\u540D\u91C7\u96C6H5\u9875\u9762\u6A21\u677F\u7F16\u53F7
      * @var string
      */
    protected $signature_html5_template_id;
    
    /**
      * $sms_template_id \u77ED\u4FE1\u6A21\u677F\u7F16\u53F7
      * @var string
      */
    protected $sms_template_id;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->email_template_id = $data["email_template_id"];
            $this->redirect_uri = $data["redirect_uri"];
            $this->seal_html5_template_id = $data["seal_html5_template_id"];
            $this->signature_html5_template_id = $data["signature_html5_template_id"];
            $this->sms_template_id = $data["sms_template_id"];
        }
    }
    
    /**
     * Gets email_template_id
     * @return string
     */
    public function getEmailTemplateId()
    {
        return $this->email_template_id;
    }
  
    /**
     * Sets email_template_id
     * @param string $email_template_id \u90AE\u4EF6\u6A21\u677F\u7F16\u53F7
     * @return $this
     */
    public function setEmailTemplateId($email_template_id)
    {
        
        $this->email_template_id = $email_template_id;
        return $this;
    }
    
    /**
     * Gets redirect_uri
     * @return string
     */
    public function getRedirectUri()
    {
        return $this->redirect_uri;
    }
  
    /**
     * Sets redirect_uri
     * @param string $redirect_uri Signature completed redirected link
     * @return $this
     */
    public function setRedirectUri($redirect_uri)
    {
        
        $this->redirect_uri = $redirect_uri;
        return $this;
    }
    
    /**
     * Gets seal_html5_template_id
     * @return string
     */
    public function getSealHtml5TemplateId()
    {
        return $this->seal_html5_template_id;
    }
  
    /**
     * Sets seal_html5_template_id
     * @param string $seal_html5_template_id \u5370\u7AE0\u91C7\u96C6H5\u9875\u9762\u6A21\u677F\u7F16\u53F7
     * @return $this
     */
    public function setSealHtml5TemplateId($seal_html5_template_id)
    {
        
        $this->seal_html5_template_id = $seal_html5_template_id;
        return $this;
    }
    
    /**
     * Gets signature_html5_template_id
     * @return string
     */
    public function getSignatureHtml5TemplateId()
    {
        return $this->signature_html5_template_id;
    }
  
    /**
     * Sets signature_html5_template_id
     * @param string $signature_html5_template_id \u7B7E\u540D\u91C7\u96C6H5\u9875\u9762\u6A21\u677F\u7F16\u53F7
     * @return $this
     */
    public function setSignatureHtml5TemplateId($signature_html5_template_id)
    {
        
        $this->signature_html5_template_id = $signature_html5_template_id;
        return $this;
    }
    
    /**
     * Gets sms_template_id
     * @return string
     */
    public function getSmsTemplateId()
    {
        return $this->sms_template_id;
    }
  
    /**
     * Sets sms_template_id
     * @param string $sms_template_id \u77ED\u4FE1\u6A21\u677F\u7F16\u53F7
     * @return $this
     */
    public function setSmsTemplateId($sms_template_id)
    {
        
        $this->sms_template_id = $sms_template_id;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
